extern c_exit(retval: word);

struct Number { a: word, }

impl Number {
    @static
    fn new(n: word) -> @: @ { a: n, };

    fn times(n: word) -> @: @.new(.a * n);
    fn square -> @: .times(.a);
    fn get -> word: .a;
    fn exit: c_exit(.get());

    //fn __bool__ -> bool: .a;
    fn __plus__(rhs: Number) -> Number: @.new(.a + rhs.a);
    //fn __minus__(rhs: Number) -> Number: @.new(.a - rhs.a);
    //fn __star__(rhs: Number) -> Number: @.new(.a * rhs.a);
    //fn __slash__(rhs: Number) -> Number: @.new(.a / rhs.a);
}

fn main {
    let n = Number.new(3).times(2).square();
    (n + Number.new(2)).exit();
}
