extern c_exit(retval: word);

struct Number { a: word, }

impl Number {
    @static
    fn new(n: word) -> @: @ { a: n, };

    fn __eq__(other: Number) -> bool: .a == other.a;
    fn __neq__(other: Number) -> bool: .a != other.a;
    fn __lt__(other: Number) -> bool: .a < other.a;
    fn __leq__(other: Number) -> bool: .a <= other.a;
    fn __gt__(other: Number) -> bool: .a > other.a;
    fn __geq__(other: Number) -> bool: .a >= other.a;
}

fn main {
    let one = Number.new(1);
    let two = Number.new(2);
    let three = Number.new(3);

    assert one == one;
    assert one != two;
    assert one < two;
    assert one <= one;
    assert three > two;
    assert three >= three;
    c_exit(0);
}
